input {
  # 从Filebeat接收日志
  beats {
    port => 5044
  }
  
  # 从TCP接收日志
  tcp {
    port => 5000
    codec => json_lines
  }
  
  # 从UDP接收日志
  udp {
    port => 5001
    codec => json_lines
  }
  
  # 从HTTP接收日志
  http {
    port => 5002
    codec => json
  }
}

filter {
  # 解析Spring Boot应用日志
  if [fields][service] {
    mutate {
      add_field => { "service_name" => "%{[fields][service]}" }
    }
  }
  
  # 解析JSON格式日志
  if [message] =~ /^\{.*\}$/ {
    json {
      source => "message"
    }
  }
  
  # 解析Spring Boot日志格式
  grok {
    match => { 
      "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:level} \[%{DATA:logger}\] - %{GREEDYDATA:log_message}"
    }
  }
  
  # 时间戳处理
  date {
    match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss" ]
    target => "@timestamp"
  }
  
  # 添加标签
  if [level] == "ERROR" {
    mutate {
      add_tag => [ "error" ]
    }
  }
  
  if [level] == "WARN" {
    mutate {
      add_tag => [ "warning" ]
    }
  }
  
  # 提取异常信息
  if [log_message] =~ /Exception|Error/ {
    mutate {
      add_field => { "has_exception" => "true" }
    }
  }
  
  # 提取HTTP信息
  if [log_message] =~ /HTTP/ {
    grok {
      match => { 
        "log_message" => "%{WORD:http_method} %{URIPATH:http_path} HTTP/%{NUMBER:http_version} %{NUMBER:http_status}"
      }
    }
  }
  
  # 清理字段
  mutate {
    remove_field => [ "host", "agent", "ecs" ]
  }
}

output {
  # 输出到Elasticsearch
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "eleme-logs-%{+YYYY.MM.dd}"
    manage_template => false
  }
  
  # 错误日志单独存储
  if "error" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "eleme-errors-%{+YYYY.MM.dd}"
    }
  }
  
  # 控制台输出 (开发环境)
  stdout {
    codec => rubydebug
  }
} 